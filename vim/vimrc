call plug#begin()
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'scrooloose/syntastic'
Plug 'SirVer/ultisnips'
Plug 'bling/vim-airline'
Plug 'honza/vim-snippets'
Plug 'kien/ctrlp.vim'
Plug 'ycm-core/YouCompleteMe', { 'do': './install.py' }
Plug 'ervandew/supertab'
" On-demand loading
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
call plug#end()

" Installed from the plugins
colorscheme dracula

set encoding=utf-8
" line numbers
set number relativenumber
set nu rnu
" Show the curser line
set cursorline
syntax enable

" Check if 256 color mode is enabled, if not, enable it
if $COLORTERM == 'gnome-terminal'
	  set t_Co=256
endif


" Python specific settings
set autoindent
set tabstop=4
set expandtab
set shiftwidth=4
filetype indent on 



" Automatically open NERDTree when opening vim
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
" Automatically close NERDTree if that is the only buffer remaining
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Fix the python version for YCM
"let g:ycm_path_to_python_interpreter = '/Users/nicholas/.pyenv/shims/python'

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
